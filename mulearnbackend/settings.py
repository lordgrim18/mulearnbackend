"""
Django settings for mulearnbackend project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""


import os
from pathlib import Path

from decouple import config as decouple_config

import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = decouple_config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = decouple_config("DEBUG", default=False, cast=bool)

ALLOWED_HOSTS = decouple_config(
    "ALLOWED_HOSTS", cast=lambda v: [s.strip() for s in v.split(",")]
)

# System admin applied to rows when their parent user instance is deleted
SYSTEM_ADMIN_ID = decouple_config("SYSTEM_ADMIN_ID")

# Application definition

INSTALLED_APPS = [
    "daphne",
    # 'django.contrib.admin',
    "django.contrib.auth",
    "django.contrib.contenttypes",
    # 'django.contrib.sessions',
    # 'django.contrib.messages',
    "django.contrib.staticfiles",
    "rest_framework",
    # custom apps
    "debug_toolbar",
    "utils.apps.UtilsConfig",
    "api.apps.ApiConfig",
    "corsheaders",
    "db",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.common.CommonMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "mulearnbackend.middlewares.UniversalErrorHandlerMiddleware",
]

ROOT_URLCONF = "mulearnbackend.urls"
CORS_ALLOW_ALL_ORIGINS = True

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",)
}
# paginator settings
PAGE_SIZE = 10
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "mulearnbackend.asgi.application"

WSGI_APPLICATION = "mulearnbackend.wsgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(decouple_config("REDIS_HOST"), decouple_config("REDIS_PORT"))],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": decouple_config("DATABASE_ENGINE"),
        "NAME": decouple_config("DATABASE_NAME"),
        "USER": decouple_config("DATABASE_USER"),
        "PASSWORD": decouple_config("DATABASE_PASSWORD"),
        "HOST": decouple_config("DATABASE_HOST"),
        "PORT": decouple_config("DATABASE_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

LOG_PATH = decouple_config("LOGGER_DIR_PATH")

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "request_log": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": f"{LOG_PATH}/request.log",
            "formatter": "verbose",
        },
        "error_log": {
            "level": "ERROR",
            "class": "logging.FileHandler",
            "filename": f"{LOG_PATH}/error.log",
            "formatter": "verbose",
        },
        "sql_log": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": f"{LOG_PATH}/sql.log",
            "formatter": "verbose",
        },
        "root_log": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": f"{LOG_PATH}/root.log",
            "formatter": "verbose",
        },
    },
    "loggers": {
        "django.request": {
            "handlers": ["request_log"],
            "level": "INFO",
            "propagate": True,
        },
        "django": {
            "handlers": ["error_log"],
            "level": "ERROR",
            "propagate": True,
        },
        "django.db.backends": {
            "handlers": ["sql_log"],
            "level": "DEBUG",
            "propagate": True,
        },
        "": {
            "handlers": ["root_log"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
    "formatters": {
        "verbose": {
            "format": "{asctime} {levelname} {message}",
            "style": "{",
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "assets")
STATIC_URL = "/muback-static/"

MEDIA_URL = "/muback-media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email Sending
EMAIL_BACKEND = decouple_config("EMAIL_BACKEND")
EMAIL_HOST = decouple_config("EMAIL_HOST")
EMAIL_HOST_USER = decouple_config("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = decouple_config("EMAIL_HOST_PASSWORD")
EMAIL_PORT = decouple_config("EMAIL_PORT")
EMAIL_USE_TLS = decouple_config("EMAIL_USE_TLS")
FROM_MAIL = decouple_config("FROM_MAIL")
FR_DOMAIN_NAME = decouple_config("FR_DOMAIN_NAME")

DEFAULT_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"

import socket

hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
INTERNAL_IPS = [f"{ip[:-1]}1" for ip in ips] + ["127.0.0.1", "10.0.2.2"]
